#!/bin/bash
# Prepare_functions: common code for Prepare for imaging / clone / custom BPR
source ${codebase}/Common_functions || return 135

Run_apt_update() {

    [[ $aptcache_needs_update == 'Y' ]] || return 0
    Check_report_dest $Messages_O || return $?

    Pauze 'apt-get update'
    sudo apt-get update &>>${Messages_O} &
    Time_to_kill $! "Running apt-get update. Details in $Messages_O"
    export aptcache_needs_update='N'

    return 0
}

Apt_purge() {
    local packages=$1
    [[ -z $packages ]] && return 4
    Check_report_dest $Messages_O || return $?

    local RC=0
    if [ "${live_run}." != 'Y.' ]
    then
        Pauze 'DRY RUN: apt-get purge --auto-remove ' $packages |tee -a ${Messages_O}
        return 0
    fi

    sudo apt-get purge --auto-remove $packages 2>>${Messages_O} || RC=$?

    return $RC
}

Apt_install() {
    local packages=$1
    [[ -z $packages ]] && return 4
    Check_report_dest $Messages_O || return $?

    local RC=0
    if [ "${live_run}." != 'Y.' ]
    then
        Pauze 'DRY RUN: apt-get install -V --show-progress '$packages |tee -a ${Messages_O}
        return 0
    fi

    sudo apt-get install -V --show-progress $packages 2>>${Messages_O} || RC=$?

    return $RC
}

Contact_server() {

    Pauze "Check that server address is correct and is contactable ( COND: $refresh_svn )"

    Sub_lcl_stat() {
        echo 'Check on subversion local repo status'
        if [ -d ${SOURCEBASE}/.svn ]
        then
            cd ${SOURCEBASE}/
            svn update
        else
            apt-get install subversion
            cd
            Correct_subversion_ssh
            svn co svn+ssh://frita@192.168.1.9/var/svn/Frita/freeitathenscode/
        fi
        Pauze '(DONE) Check on subversion local repo status'
    }

    [[ $(ssh frita@192.168.1.9 'echo $HOSTNAME') =~ 'nuvo-servo' ]]\
        && Pauze 'Checked Server is valid: 192.168.1.9' && Sub_lcl_stat && return $?

    return 1
}

Correct_subversion_ssh() {

    subv_conf=''
    for subversion_meta_dir in $(find '/home/'$(grep ':'$UID':' /etc/passwd |cut -f1 -d:) -maxdepth 1 -type d -name '.subversion';find /etc/ -maxdepth 1 -type d -name 'subversion')
    do
        subv_conf="${subversion_meta_dir}/config"
        echo 'Checking subversion config path '$subv_conf
        [[ -f ${subv_conf} ]] && break
        subv_conf=''
    done
    [[ -z $subv_conf ]] && return 4

    grep 'ssh' $subv_conf
    Answer='N'
    Pause_n_Answer 'Y|N' "Fix $subv_conf for Frita's ssh connection (Y|N)? "
    case $Answer in
        Y)
            sudo perl -pi'.bak' -e 's/#\s*ssh\b(.+?ssh)\s+-q(.+)$/ssh${1} -v${2}/' ${subv_conf}
            ;;
        *)
            Pauze 'OK, NO changes made...'
            ;;
    esac

    return 0
}

Check_report_dest() {
    local report_file_out=$1

    [[ -z $report_file_out ]] && report_file_out=/tmp/prep_mess_dflt
    if [ ! -w $report_file_out ]
    then
        echo 'Problem writing to '$report_file_out
        return 12
    fi

    return 0
}

#Apt_action_replace() {
#    local packages=$1
#    [[ -z $packages ]] && return 4
#    shift 1
#    local replacements=$@
#
#    local RC=0
#    echo 'Attempting to replace' $packages 'with' $replacements
#    Apt_purge $packages ||RC=$?
#    if [ $RC -eq 0 ]
#    then
#        Apt_install $replacements ||RC=$?
#    fi
#
#    return $RC
#}
